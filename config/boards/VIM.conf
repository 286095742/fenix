UBOOT_DEFCONFIG="kvim_defconfig"
UBOOT_GIT_BRANCH="khadas-vim-v2015.01"

case "$LINUX" in
	mainline)
		LINUX_DTB="arch/arm64/boot/dts/amlogic/meson-gxl-s905x-khadas-vim.dtb"
		LINUX_DIR="$BUILD/linux-mainline-*"
		LINUX_GIT_BRANCH="master"
		LINUX_DEFCONFIG="defconfig"
		SERIALCON="ttyAML0"
		BOOT_SCRIPT_BOARD="s905_autoscript.cmd.mainline"
		GPU_VER="r7p0"
		GPU_PLATFORM="x11"
		;;
	3.14)
		LINUX_DTB="arch/arm64/boot/dts/kvim_linux.dtb"
		LINUX_DIR="$ROOT/linux"
		LINUX_GIT_BRANCH="khadas-vim-3.14.y"
		LINUX_DEFCONFIG="kvim_defconfig"
		SERIALCON="ttyS0"
		BOOT_SCRIPT_BOARD="s905_autoscript.cmd"
		GPU_VER="r5p1"
		GPU_PLATFORM="fbdev"
		;;
	4.9)
		LINUX_DTB="arch/arm64/boot/dts/amlogic/kvim_linux.dtb"
		LINUX_DIR="$ROOT/linux"
		LINUX_GIT_BRANCH="khadas-vim-4.9.y"
		LINUX_DEFCONFIG="kvim_defconfig"
		SERIALCON="ttyS0"
		BOOT_SCRIPT_BOARD="s905_autoscript.cmd"
		GPU_VER="r7p0"
		GPU_PLATFORM="fbdev"
		;;
esac

BOOT_SCRIPT_VENDER="aml_autoscript.txt"
BOOT_INI="aml_boot.ini"

####
WIFI_MODEL="Broadcom"
GPU_MODEL="ARM-Mali-M450"

##############################
## Pack image
pack_image_platform() {
    cd ${ROOT}

    echo "Image install type: $INSTALL_TYPE"
    if [ "$INSTALL_TYPE" == "EMMC" ]; then
		## Fixup upgrade dtb link
		cd $UPGRADE_DIR
		rm -rf kvim.dtb

		case "$LINUX" in
			4.9|3.14)
				ln -s ../../linux/$LINUX_DTB kvim.dtb
				;;
		mainline)
				;;
		esac

		cd -

        $UTILS_DIR/aml_image_v2_packer -r $UPGRADE_DIR/package.conf $UPGRADE_DIR $BUILD_IMAGES/${IMAGE_FILE_NAME}
    elif [ "$INSTALL_TYPE" == "SD-USB" ]; then

        IMAGE_LOOP_DEV="$(losetup --show -f ${BUILD_IMAGES}/${IMAGE_FILE_NAME})"
        partprobe "${IMAGE_LOOP_DEV}"

		case "$UBOOT" in
			mainline)
				local uboot_sd_image="$BUILD_IMAGES/u-boot-mainline/u-boot.bin.sd.bin"
				;;
			2015.01)
				local uboot_sd_image="$ROOT/u-boot/fip/u-boot.bin.sd.bin"
				;;
		esac

		dd if=$uboot_sd_image of=${IMAGE_LOOP_DEV} conv=fsync bs=1 count=442
		dd if=$uboot_sd_image of=${IMAGE_LOOP_DEV} conv=fsync bs=512 skip=1 seek=1

        losetup -d "${IMAGE_LOOP_DEV}"
    else
        error_msg "Unsupported install type: '$INSTALL_TYPE'"
        return -1
    fi

    echo ""
	info_msg "IMAGE: $BUILD_IMAGES/$IMAGE_FILE_NAME"
}

## Install kodi
install_kodi() {
	if [ "$LINUX" == "3.14" ] && [ "$DISTRIB_TYPE" != "server" ]; then
		info_msg "Build Kodi packages..."
		build_package "pkg-aml-kodi:target"
		build_package "pkg-aml-codec:target"
		build_package "pkg-aml-amremote:target"

		cd $ROOT
		# Install in chroot
		info_msg "Install Kodi packages..."
		install_deb_chroot $BUILD_DEBS/pkg-aml-kodi_*.deb
		install_deb_chroot $BUILD_DEBS/pkg-aml-codec_*.deb
		install_deb_chroot $BUILD_DEBS/pkg-aml-amremote_*.deb

		# Enable khadas remote
		cp $ROOTFS_TEMP/boot/remote.conf.vim $ROOTFS_TEMP/boot/remote.conf

		chroot $ROOTFS_TEMP /bin/bash -c "systemctl --no-reload enable amlogic-remotecfg.service"
	fi
}

## Install packages for platform
install_packages_platform() {
	install_kodi
}
